name: Performance Monitoring & SEO Audit

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run performance audit daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  lighthouse-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_GOOGLE_VERIFICATION: ${{ secrets.GOOGLE_VERIFICATION }}
          NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}

      - name: Start application
        run: npm start &
        env:
          NODE_ENV: production

      - name: Wait for application to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000/api/health; do sleep 2; done'

      - name: Run Lighthouse audit
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        continue-on-error: true

      - name: Check Lighthouse results
        run: |
          echo "Lighthouse audit completed with exit code: ${{ steps.lighthouse.outcome }}"
          if [ "${{ steps.lighthouse.outcome }}" != "success" ]; then
            echo "‚ö†Ô∏è Lighthouse audit had issues, but continuing workflow"
          fi

      - name: Run custom SEO checks
        run: |
          chmod +x ./scripts/seo-check.sh
          ./scripts/seo-check.sh || {
            echo "‚ö†Ô∏è SEO checks had issues, but continuing workflow"
            exit 0
          }

      - name: Generate Web Vitals report
        run: |
          npm run vitals-report || {
            echo "‚ö†Ô∏è Web Vitals report generation had issues, but continuing workflow"
            exit 0
          }

      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        with:
          name: performance-reports
          path: |
            reports/
            .lighthouseci/

  seo-validation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint

      - name: Build check
        run: npm run build
        env:
          NEXT_PUBLIC_GOOGLE_VERIFICATION: ${{ secrets.GOOGLE_VERIFICATION }}

      - name: Validate robots.txt
        run: |
          if [ -f "public/robots.txt" ]; then
            echo "‚úÖ robots.txt exists"
            cat public/robots.txt
          else
            echo "‚ùå robots.txt missing"
            exit 1
          fi

      - name: Check sitemap generation
        run: |
          npm start &
          sleep 10
          curl -f http://localhost:3000/sitemap.xml || exit 1
          echo "‚úÖ Sitemap accessible"

  performance-budget:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and analyze bundle
        run: npm run build:analyze
        env:
          ANALYZE: true

      - name: Check bundle size
        run: |
          if command -v bundlesize &> /dev/null; then
            bundlesize
          else
            echo "‚ö†Ô∏è Bundle size check skipped (bundlesize not configured)"
          fi

      - name: Performance budget check
        run: |
          echo "üìä Performance Budget Check"
          echo "=============================="

          # Check if .next/static exists and measure sizes
          if [ -d ".next/static" ]; then
            # Calculate JavaScript bundle size with error handling
            JS_FILES=$(find .next/static -name "*.js" -type f 2>/dev/null || echo "")
            if [ -n "$JS_FILES" ]; then
              JS_SIZE=$(find .next/static -name "*.js" -type f -exec du -ch {} + 2>/dev/null | grep total | cut -f1 || echo "0K")
            else
              JS_SIZE="0K"
            fi

            # Calculate CSS bundle size with error handling
            CSS_FILES=$(find .next/static -name "*.css" -type f 2>/dev/null || echo "")
            if [ -n "$CSS_FILES" ]; then
              CSS_SIZE=$(find .next/static -name "*.css" -type f -exec du -ch {} + 2>/dev/null | grep total | cut -f1 || echo "0K")
            else
              CSS_SIZE="0K"
            fi

            echo "JavaScript bundle size: $JS_SIZE"
            echo "CSS bundle size: $CSS_SIZE"

            # Validate that sizes are not empty or NaN
            if [ "$JS_SIZE" = "NaN" ] || [ -z "$JS_SIZE" ]; then
              echo "‚ö†Ô∏è Could not calculate JavaScript bundle size"
              JS_SIZE="Unknown"
            fi

            if [ "$CSS_SIZE" = "NaN" ] || [ -z "$CSS_SIZE" ]; then
              echo "‚ö†Ô∏è Could not calculate CSS bundle size"
              CSS_SIZE="Unknown"
            fi

            echo "‚úÖ Bundle size check completed"
          else
            echo "‚ö†Ô∏è Build artifacts not found"
          fi
